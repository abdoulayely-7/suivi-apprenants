generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Niveau {
  id    Int    @id @default(autoincrement())
  name  String

  userCompetences UserCompetence[]
}



model Profil {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}


model ProfilSortie {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}


model User {
  id             Int          @id @default(autoincrement())
  name           String
  email          String       @unique
  password       String
  profilId       Int
  profilSortieId Int?         // facultatif pour formateurs/admin
  promoUsers     PromoUser[]
  RefUser RefUser[]
  userCompetences UserCompetence[]

  profil        Profil         @relation(fields: [profilId], references: [id])
  profilSortie  ProfilSortie?  @relation(fields: [profilSortieId], references: [id])

}


model Promo {
  id           Int         @id @default(autoincrement())
  name         String
  promoUsers   PromoUser[]
  promoRefs    PromoRef[]
}


model Referentiel {
  id        Int         @id @default(autoincrement())
  name      String
  promoRefs PromoRef[]
  RefUser RefUser[]
  refCompetences RefCompetence[]
}


model Competence {
  id             Int             @id @default(autoincrement())
  name           String
  refCompetences RefCompetence[]
  userCompetences UserCompetence[]
}


model Tag {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  briefTags BriefTag[]
}


model Brief {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  briefTags BriefTag[]
}

model BriefTag {
  id      Int   @id @default(autoincrement())
  briefId Int
  tagId   Int

  brief Brief @relation(fields: [briefId], references: [id])
  tag   Tag   @relation(fields: [tagId], references: [id])

  @@unique([briefId, tagId])
}


model PromoRef {
  id            Int         @id @default(autoincrement())
  promoId       Int
  referentielId Int

  promo        Promo        @relation(fields: [promoId], references: [id])
  referentiel  Referentiel  @relation(fields: [referentielId], references: [id])

  @@unique([promoId, referentielId])
}

model RefCompetence {
  id            Int          @id @default(autoincrement())
  referentielId Int
  competenceId  Int

  referentiel   Referentiel  @relation(fields: [referentielId], references: [id])
  competence    Competence   @relation(fields: [competenceId], references: [id])

  @@unique([referentielId, competenceId])
}

model UserCompetence {
  id           Int       @id @default(autoincrement())
  userId       Int
  competenceId Int
  niveauId     Int

  user        User       @relation(fields: [userId], references: [id])
  competence  Competence @relation(fields: [competenceId], references: [id])
  niveau      Niveau     @relation(fields: [niveauId], references: [id])

  @@unique([userId, competenceId])
}

model PromoUser {
  id       Int   @id @default(autoincrement())
  userId   Int
  promoId  Int
  user     User  @relation(fields: [userId], references: [id])
  promo    Promo @relation(fields: [promoId], references: [id])

  @@unique([userId, promoId])
}
model RefUser {
  id            Int         @id @default(autoincrement())
  userId        Int
  referentielId  Int
  user          User        @relation(fields: [userId], references: [id])
  referentiel   Referentiel @relation(fields: [referentielId], references: [id])

  @@unique([userId, referentielId])
}


